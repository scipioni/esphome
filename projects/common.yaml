esphome:
  name: ${node_name}
  friendly_name: ${node_friendly_name}
  on_boot:
    priority: -100.0
    then:
      - logger.log: "${node_name} started"

preferences:
  flash_write_interval: 2min

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  reboot_timeout: 120min
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${node_name}
    password: !secret ap_password

logger:
  level: VERBOSE

# Enable Home Assistant API
api:

# Enable OTA updates
ota:
  - platform: esphome

button:
  - platform: restart
    name: Restart

sensor:
  - platform: wifi_signal
    name: Wi-Fi Signal
    update_interval: 15s
  - platform: uptime
    name: Uptime Sensor
    update_interval: 60s
    id: uptime_sec

text_sensor:
  - platform: version
    name: "${node_name} ESPHome Version"
  - platform: wifi_info
    ip_address:
      name: "${node_name} IP"
      id: ip_address
    ssid:
      name: "${node_name} SSID"
      id: ssid
  - platform: template
    name: "${node_name} Uptime"
    icon: "mdi:timer"
    update_interval: 360s
    lambda: |-
      int seconds = id(uptime_sec).state;
      int days = seconds / (24 * 3600);
      seconds = seconds % (24 * 3600); 
      int hours = seconds / 3600;
      seconds = seconds % 3600;
      int minutes = seconds / 60;
      return { (std::to_string(days) + "d " + std::to_string(hours) + "h " + std::to_string(minutes) + "m").c_str() };
